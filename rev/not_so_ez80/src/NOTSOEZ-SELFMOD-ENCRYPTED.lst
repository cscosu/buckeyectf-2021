    1 00:0000 -  -  -  -  ; Original code by Kyle Westhaus
    2 00:0000 -  -  -  -  
    8 00:0000 -  -  -  -  
    9 00:0000 -  -  -  -  	.org userMem-2
   10 00:9D93 BB 6D -  -  	.db $BB,$6D
   11 00:9D95 -  -  -  -  
   12 00:9D95 -  -  -  -  main:
   13 00:9D95 EF 40 45 -  	bcall(_ClrLCDFull)
Listing for file "NOTSOEZ-ENCRYPTED.z80"
   14 00:9D98 06 EA -  -          ld b,234
   15 00:9D9A 21 A2 9E -          ld hl, startencrypt
   16 00:9D9D -  -  -  -  
   17 00:9D9D -  -  -  -  decloop:
   18 00:9D9D 7E -  -  -          ld a, (hl)
   19 00:9D9E A8 -  -  -          xor b
   20 00:9D9F 77 -  -  -          ld (hl), a
   21 00:9DA0 23 -  -  -          inc hl
   22 00:9DA1 10 FA -  -          djnz decloop
   23 00:9DA3 -  -  -  -  
   24 00:9DA3 -  -  -  -  start:
   25 00:9DA3 3E 00 -  -  	ld a, 0
   26 00:9DA5 32 4B 84 -          ld (CurRow), a
   27 00:9DA8 32 4C 84 -          ld (CurCol), a
   28 00:9DAB 21 11 9F -          ld hl, s_prompt
   29 00:9DAE EF 0A 45 -          bcall(_PutS)
   30 00:9DB1 -  -  -  -  
   31 00:9DB1 21 5A 9F -          ld hl, s_input
   32 00:9DB4 0E 26 -  -          ld c, BUFSIZE
   33 00:9DB6 CD 21 9E -          call strnget
   34 00:9DB9 -  -  -  -  
   35 00:9DB9 21 5A 9F -          ld hl, s_input
   36 00:9DBC 11 08 85 -          ld de, buffer
   37 00:9DBF -  -  -  -  main_copy_loop:
   38 00:9DBF 7E -  -  -          ld a, (hl)
   39 00:9DC0 12 -  -  -          ld (de), a
   40 00:9DC1 23 -  -  -          inc hl
   41 00:9DC2 13 -  -  -          inc de
   42 00:9DC3 B7 -  -  -          or a
   43 00:9DC4 20 F9 -  -          jr nz, main_copy_loop
   44 00:9DC6 -  -  -  -  
   45 00:9DC6 21 08 85 -          ld hl, buffer
   46 00:9DC9 CD 80 9E -          call alphadown
   47 00:9DCC -  -  -  -  
   48 00:9DCC B7 -  -  -          or a
   49 00:9DCD 28 17 -  -          jr z, main_wrong
   50 00:9DCF -  -  -  -  
   51 00:9DCF 21 08 85 -          ld hl, buffer
   52 00:9DD2 CD A2 9E -          call scramble
   53 00:9DD5 -  -  -  -  
   54 00:9DD5 21 08 85 -          ld hl, buffer
   55 00:9DD8 CD 97 9E -          call alphaup
   56 00:9DDB -  -  -  -  
   57 00:9DDB 21 19 9F -          ld hl, s_key
   58 00:9DDE 11 08 85 -          ld de, buffer
   59 00:9DE1 CD FF 9E -          call memcmp
   60 00:9DE4 28 0B -  -          jr z, main_right
   61 00:9DE6 -  -  -  -  
   62 00:9DE6 -  -  -  -  main_wrong:
   63 00:9DE6 21 3F 9F -          ld hl, s_wrong
   64 00:9DE9 EF 0A 45 -          bcall(_PutS)
   65 00:9DEC EF 2E 45 -          bcall(_NewLine)
   66 00:9DEF 18 1E -  -          jr main_end
   67 00:9DF1 -  -  -  -  
   68 00:9DF1 -  -  -  -  main_right:
   69 00:9DF1 21 46 9F -          ld hl, s_correct
   70 00:9DF4 EF 0A 45 -          bcall(_PutS)
   71 00:9DF7 EF 2E 45 -          bcall(_NewLine)
   72 00:9DFA 21 4F 9F -          ld hl, s_flagopen
   73 00:9DFD EF 0A 45 -          bcall(_PutS)
   74 00:9E00 21 5A 9F -          ld hl, s_input
   75 00:9E03 EF 0A 45 -          bcall(_PutS)
   76 00:9E06 21 58 9F -          ld hl, s_flagclose
   77 00:9E09 EF 0A 45 -          bcall(_PutS)
   78 00:9E0C EF 2E 45 -          bcall(_NewLine)
   79 00:9E0F -  -  -  -  
   80 00:9E0F -  -  -  -  main_end:
   81 00:9E0F 21 80 9F -          ld hl, s_pressenter
   82 00:9E12 EF 0A 45 -          bcall(_PutS)
   83 00:9E15 21 5A 9F -          ld hl, s_input
   84 00:9E18 0E 01 -  -          ld c, 1
   85 00:9E1A CD 21 9E -          call strnget
   86 00:9E1D EF 40 45 -          bcall(_ClrLCDFull)
   87 00:9E20 C9 -  -  -          ret
   88 00:9E21 -  -  -  -  
   89 00:9E21 -  -  -  -  #include "STRNGET.z80"
Listing for file "STRNGET.z80"
    1 00:9E21 -  -  -  -  ; Code adapted by Kyle Westhaus from sample code provided in Day 27 of "Learn TI-83 Plus Assembly In 28 Days" by Sean McLaughlin
    2 00:9E21 -  -  -  -  
    3 00:9E21 -  -  -  -  ; expects buffer in hl, size in c, and size to be >= 1 (last character will be null byte)
    4 00:9E21 -  -  -  -  ; trashes a, b, de, hl
    5 00:9E21 -  -  -  -  strnget:
    6 00:9E21 FD CB 0D 8E         res AppTextSave, (IY + AppFlags)
    7 00:9E25 AF -  -  -          xor a
    8 00:9E26 47 -  -  -          ld b, a
    9 00:9E27 0D -  -  -          dec c
   10 00:9E28 -  -  -  -          ; does NOT reset text position (in case getting input after prompt)
   11 00:9E28 -  -  -  -          ; ld (CurCol), a
   12 00:9E28 -  -  -  -  
   13 00:9E28 -  -  -  -  strnget_keyloop:
   14 00:9E28 EB -  -  -          ex de, hl
   15 00:9E29 EF 18 40 -          bcall(_GetCSC)
Listing for file "STRNGET.z80"
   16 00:9E2C EB -  -  -          ex de, hl
   17 00:9E2D B7 -  -  -          or a
   18 00:9E2E 28 F8 -  -          jr z, strnget_keyloop
   19 00:9E30 -  -  -  -  
   20 00:9E30 FE 09 -  -          cp skEnter
   21 00:9E32 20 06 -  -          jr nz, strnget_notenter
   22 00:9E34 -  -  -  -  
   23 00:9E34 36 00 -  -          ld (hl), 0
   24 00:9E36 EF 2E 45 -          bcall(_NewLine)
   25 00:9E39 C9 -  -  -          ret
   26 00:9E3A -  -  -  -  
   27 00:9E3A -  -  -  -  strnget_notenter:
   28 00:9E3A 57 -  -  -          ld d, a
   29 00:9E3B 78 -  -  -          ld a, b
   30 00:9E3C B9 -  -  -          cp c
   31 00:9E3D 28 E9 -  -          jr z, strnget_keyloop
   32 00:9E3F -  -  -  -  
   33 00:9E3F 7A -  -  -          ld a, d
   34 00:9E40 D6 0A -  -          sub skAdd
   35 00:9E42 38 E4 -  -          jr c, strnget_keyloop
   36 00:9E44 -  -  -  -  
   37 00:9E44 FE 26 -  -          cp skMath - skAdd + 1
   38 00:9E46 30 E0 -  -          jr nc, strnget_keyloop
   39 00:9E48 -  -  -  -  
   40 00:9E48 E5 -  -  -          push hl
   41 00:9E49 26 00 -  -          ld h, 0
   42 00:9E4B 6F -  -  -          ld l, a
   43 00:9E4C 11 5A 9E -          ld de, strnget_chartable
   44 00:9E4F 19 -  -  -          add hl, de
   45 00:9E50 7E -  -  -          ld a, (hl)
   46 00:9E51 E1 -  -  -          pop hl
   47 00:9E52 EF 04 45 -          bcall(_PutC)
   48 00:9E55 77 -  -  -          ld (hl), a
   49 00:9E56 23 -  -  -          inc hl
   50 00:9E57 04 -  -  -          inc b
   51 00:9E58 18 CE -  -          jr strnget_keyloop
   52 00:9E5A -  -  -  -  
   53 00:9E5A -  -  -  -  strnget_chartable:
   54 00:9E5A 27 57 52 4D 
              48 00 00 -          .db "'WRMH", 0, 0
   55 00:9E61 3F 5B 56 51 
              4C 47 00 00         .db "?", LTheta, "VQLG", 0, 0
   56 00:9E69 3A 5A 55 50 
              4B 46 43 00         .db ":ZUPKFC", 0
   57 00:9E71 20 59 54 4F 
              4A 45 42 00 
              00 -  -  -          .db " YTOJEB", 0, 0
   58 00:9E7A 58 53 4E 49 
              44 41 -  -          .db "XSNIDA"
Listing for file "NOTSOEZ-ENCRYPTED.z80"
   90 00:9E80 -  -  -  -  #include "ALPHADWN.z80"
Listing for file "ALPHADWN.z80"
    1 00:9E80 -  -  -  -  ; Original code by Kyle Westhaus
    2 00:9E80 -  -  -  -  
    3 00:9E80 -  -  -  -  ; expects null-terminated input buffer in hl
    4 00:9E80 -  -  -  -  ; trashes a, hl
    5 00:9E80 -  -  -  -  alphadown:
    6 00:9E80 7E -  -  -          ld a, (hl)
    7 00:9E81 B7 -  -  -          or a
    8 00:9E82 28 0D -  -          jr z, alphadown_pass ; terminate if null byte reached
    9 00:9E84 -  -  -  -          
   10 00:9E84 D6 41 -  -          sub 'A'
   11 00:9E86 38 0D -  -          jr c, alphadown_fail ; terminate if too low
   12 00:9E88 -  -  -  -          
   13 00:9E88 FE 19 -  -          cp 'Z'-'A'
   14 00:9E8A 30 09 -  -          jr nc, alphadown_fail ; terminate if too high
   15 00:9E8C 3C -  -  -          inc a ; make range 1-25 so only null byte is end of string
   16 00:9E8D 77 -  -  -          ld (hl), a
   17 00:9E8E 23 -  -  -          inc hl
   18 00:9E8F 18 EF -  -          jr alphadown
   19 00:9E91 -  -  -  -  
   20 00:9E91 -  -  -  -  alphadown_pass:
   21 00:9E91 3E 01 -  -          ld a,1
   22 00:9E93 18 01 -  -          jr alphadown_end
   23 00:9E95 -  -  -  -  
   24 00:9E95 -  -  -  -  alphadown_fail:
   25 00:9E95 AF -  -  -          xor a
   26 00:9E96 -  -  -  -  
   27 00:9E96 -  -  -  -  alphadown_end:
   28 00:9E96 C9 -  -  -          ret
Listing for file "NOTSOEZ-ENCRYPTED.z80"
   91 00:9E97 -  -  -  -  #include "ALPHAUP.z80"
Listing for file "ALPHAUP.z80"
    1 00:9E97 -  -  -  -  ; Original code by Kyle Westhaus
    2 00:9E97 -  -  -  -  
    3 00:9E97 -  -  -  -  ; expects null-terminated input buffer in hl
    4 00:9E97 -  -  -  -  ; trashes a, hl
    5 00:9E97 -  -  -  -  alphaup:
    6 00:9E97 7E -  -  -          ld a, (hl)
    7 00:9E98 B7 -  -  -          or a
    8 00:9E99 28 06 -  -          jr z, alphaup_end ; terminate if null byte reached
    9 00:9E9B -  -  -  -          
   10 00:9E9B C6 40 -  -          add a, '@'
   11 00:9E9D 77 -  -  -          ld (hl), a
   12 00:9E9E 23 -  -  -          inc hl
   13 00:9E9F 18 F6 -  -          jr alphaup
   14 00:9EA1 -  -  -  -  
   15 00:9EA1 -  -  -  -  alphaup_end:
   16 00:9EA1 C9 -  -  -          ret
Listing for file "NOTSOEZ-ENCRYPTED.z80"
   92 00:9EA2 -  -  -  -  startencrypt:
   93 00:9EA2 -  -  -  -  scramble: ; 9ea2
   94 00:9EA2 E4 E8 96 50 
              CE C1 D9 06         .db $E4,$E8,$96,$50,$CE,$C1,$D9,$06
   95 00:9EAA F3 2C 7E F9 
              DE B2 C5 A5         .db $F3,$2C,$7E,$F9,$DE,$B2,$C5,$A5
   96 00:9EB2 9B 1F D3 29 
              CF ED D6 05         .db $9B,$1F,$D3,$29,$CF,$ED,$D6,$05
   97 00:9EBA CB C1 26 DE 
              28 53 EA CB         .db $CB,$C1,$26,$DE,$28,$53,$EA,$CB
   98 00:9EC2 A5 D0 B6 FB 
              27 B2 E7 CF         .db $A5,$D0,$B6,$FB,$27,$B2,$E7,$CF
   99 00:9ECA DA 19 09 BC 
              B6 A9 BE A3         .db $DA,$19,$09,$BC,$B6,$A9,$BE,$A3
  100 00:9ED2 AD BF B4 A4 
              B6 A3 B1 BC         .db $AD,$BF,$B4,$A4,$B6,$A3,$B1,$BC
  101 00:9EDA A3 BA A0 A6 
              A3 BF AD AF         .db $A3,$BA,$A0,$A6,$A3,$BF,$AD,$AF
  102 00:9EE2 A0 A7 AF B2 
              AF B6 A7 A3         .db $A0,$A7,$AF,$B2,$AF,$B6,$A7,$A3
  103 00:9EEA B6 AA A6 88 
              9F 8D 89 95         .db $B6,$AA,$A6,$88,$9F,$8D,$89,$95
  104 00:9EF2 9D 88 8E 9B 
              99 98 86 9B         .db $9D,$88,$8E,$9B,$99,$98,$86,$9B
  105 00:9EFA 90 89 9A 8A 
              8A -  -  -          .db $90,$89,$9A,$8A,$8A
  106 00:9EFF -  -  -  -  memcmp: ; 9eff
  107 00:9EFF 68 59 4E -          .db $68,$59,$4E
  108 00:9F02 90 64 29 A7 
              80 32 AC 80         .db $90,$64,$29,$A7,$80,$32,$AC,$80
  109 00:9F0A 91 99 75 BE 
              AF 9C B5 -          .db $91,$99,$75,$BE,$AF,$9C,$B5
  110 00:9F11 -  -  -  -  s_prompt: ; 9f11
  111 00:9F11 3C -  -  -          .db $3C
  112 00:9F12 2F 3C 2B 24 
              4C 55 74 -          .db $2F,$3C,$2B,$24,$4C,$55,$74
  113 00:9F19 -  -  -  -  s_key: ; 9f19
  114 00:9F19 24 -  -  -          .db $24
  115 00:9F1A 34 23 23 2D 
              3F 2C 3D 3D         .db $34,$23,$23,$2D,$3F,$2C,$3D,$3D
  116 00:9F22 3D 2F 3B 31 
              2A 3D 2E 2C         .db $3D,$2F,$3B,$31,$2A,$3D,$2E,$2C
  117 00:9F2A 28 29 23 0E 
              11 1F 17 09         .db $28,$29,$23,$0E,$11,$1F,$17,$09
  118 00:9F32 0C 13 14 14 
              06 00 13 1F         .db $0C,$13,$14,$14,$06,$00,$13,$1F
  119 00:9F3A 18 1A 1D 05 
              4E -  -  -          .db $18,$1A,$1D,$05,$4E
  120 00:9F3F -  -  -  -  s_wrong: ; 9f3f
  121 00:9F3F 1A 1E 04 -          .db $1A,$1E,$04
  122 00:9F42 04 0E 69 47         .db $04,$0E,$69,$47
  123 00:9F46 -  -  -  -  s_correct: ; 9f46
  124 00:9F46 05 0A 16 11         .db $05,$0A,$16,$11
  125 00:9F4A 07 02 14 1E 
              3E -  -  -          .db $07,$02,$14,$1E,$3E
  126 00:9F4F -  -  -  -  s_flagopen: ; 9f4f
  127 00:9F4F 7F 69 78 -          .db $7F,$69,$78
  128 00:9F52 71 7C 61 72 
              4D 35 -  -          .db $71,$7C,$61,$72,$4D,$35
  129 00:9F58 -  -  -  -  s_flagclose: ; 9f58
  130 00:9F58 49 33 -  -          .db $49,$33
  131 00:9F5A -  -  -  -  s_input: ; 9f5a
  132 00:9F5A 73 73 73 6B 
              6B 6B 6B 63         .db $73,$73,$73,$6B,$6B,$6B,$6B,$63
  133 00:9F62 63 63 63 6B 
              6B 6B 6B 73         .db $63,$63,$63,$6B,$6B,$6B,$6B,$73
  134 00:9F6A 73 73 73 4B 
              4B 4B 4B 43         .db $73,$73,$73,$4B,$4B,$4B,$4B,$43
  135 00:9F72 43 58 59 55 
              54 56 57 57         .db $43,$58,$59,$55,$54,$56,$57,$57
  136 00:9F7A 56 54 55 49 
              48 0D -  -          .db $56,$54,$55,$49,$48,$0D
  137 00:9F80 -  -  -  -  s_pressenter: ; 9f80
  138 00:9F80 5C 59 -  -          .db $5C,$59
  139 00:9F82 4F 5A 5B 27 
              43 4B 50 46         .db $4F,$5A,$5B,$27,$43,$4B,$50,$46
  140 00:9F8A 50 01 -  -          .db $50,$01
  141 00:9F8C -  -  -  -  
  142 00:9F8C -  -  -  -  .end
